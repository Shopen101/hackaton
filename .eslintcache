[{"C:\\Users\\furs2\\Documents\\react template\\src\\index.js":"1","C:\\Users\\furs2\\Documents\\react template\\src\\App.js":"2","C:\\Users\\furs2\\Documents\\react template\\src\\redux\\store.js":"3","C:\\Users\\furs2\\Documents\\react template\\src\\hooks\\auth.hook.js":"4","C:\\Users\\furs2\\Documents\\react template\\src\\config\\index.js":"5","C:\\Users\\furs2\\Documents\\react template\\src\\hooks\\routes.hook.jsx":"6","C:\\Users\\furs2\\Documents\\react template\\src\\redux\\action\\index.js":"7","C:\\Users\\furs2\\Documents\\react template\\src\\redux\\reducers\\index.js":"8","C:\\Users\\furs2\\Documents\\react template\\src\\pages\\Main.jsx":"9","C:\\Users\\furs2\\Documents\\react template\\src\\redux\\reducers\\main.js":"10","C:\\Users\\furs2\\Documents\\react template\\src\\pages\\index.js":"11","C:\\Users\\furs2\\Documents\\react template\\src\\pages\\Auth.jsx":"12","C:\\Users\\furs2\\Documents\\react template\\src\\pages\\SignUp.jsx":"13","C:\\Users\\furs2\\Documents\\react template\\src\\components\\index.js":"14","C:\\Users\\furs2\\Documents\\react template\\src\\components\\CircLoader.jsx":"15","C:\\Users\\furs2\\Documents\\react template\\src\\components\\SnackCenter.jsx":"16","C:\\Users\\furs2\\Documents\\react template\\src\\pages\\Dashboard.jsx":"17","C:\\Users\\furs2\\Documents\\react template\\src\\redux\\reducers\\categories.js":"18","C:\\Users\\furs2\\Documents\\react template\\src\\pages\\Footer.jsx":"19","C:\\Users\\furs2\\Documents\\react template\\src\\pages\\Category.jsx":"20","C:\\Users\\furs2\\Documents\\react template\\src\\pages\\Header.jsx":"21","C:\\Users\\furs2\\Documents\\react template\\src\\components\\Find.jsx":"22","C:\\Users\\furs2\\Documents\\react template\\src\\components\\Button.jsx":"23","C:\\Users\\furs2\\Documents\\react template\\src\\components\\ButtonReg.jsx":"24","C:\\Users\\furs2\\Documents\\react template\\src\\redux\\reducers\\userClick.js":"25","C:\\Users\\furs2\\Documents\\react template\\src\\pages\\UserPage.jsx":"26"},{"size":607,"mtime":1615724433340,"results":"27","hashOfConfig":"28"},{"size":665,"mtime":1621755952761,"results":"29","hashOfConfig":"28"},{"size":530,"mtime":1611778659694,"results":"30","hashOfConfig":"28"},{"size":1266,"mtime":1621528722533,"results":"31","hashOfConfig":"28"},{"size":202,"mtime":1621521863644,"results":"32","hashOfConfig":"28"},{"size":1531,"mtime":1621776616634,"results":"33","hashOfConfig":"28"},{"size":673,"mtime":1621775464488,"results":"34","hashOfConfig":"28"},{"size":266,"mtime":1621775618805,"results":"35","hashOfConfig":"28"},{"size":873,"mtime":1621757110406,"results":"36","hashOfConfig":"28"},{"size":1151,"mtime":1621774093586,"results":"37","hashOfConfig":"28"},{"size":232,"mtime":1621776557668,"results":"38","hashOfConfig":"28"},{"size":6220,"mtime":1621774227471,"results":"39","hashOfConfig":"28"},{"size":8775,"mtime":1621773233111,"results":"40","hashOfConfig":"28"},{"size":248,"mtime":1621766839575,"results":"41","hashOfConfig":"28"},{"size":435,"mtime":1620333018546,"results":"42","hashOfConfig":"28"},{"size":1081,"mtime":1620158736827,"results":"43","hashOfConfig":"28"},{"size":4102,"mtime":1621769870454,"results":"44","hashOfConfig":"28"},{"size":586,"mtime":1621769696258,"results":"45","hashOfConfig":"28"},{"size":316,"mtime":1621754729129,"results":"46","hashOfConfig":"28"},{"size":4962,"mtime":1621777408038,"results":"47","hashOfConfig":"28"},{"size":983,"mtime":1621767069790,"results":"48","hashOfConfig":"28"},{"size":4069,"mtime":1621764009057,"results":"49","hashOfConfig":"28"},{"size":556,"mtime":1621766688111,"results":"50","hashOfConfig":"28"},{"size":559,"mtime":1621766958886,"results":"51","hashOfConfig":"28"},{"size":380,"mtime":1621775591465,"results":"52","hashOfConfig":"28"},{"size":1769,"mtime":1621777637768,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1qsykrt",{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\furs2\\Documents\\react template\\src\\index.js",[],["114","115"],"C:\\Users\\furs2\\Documents\\react template\\src\\App.js",["116","117","118"],"C:\\Users\\furs2\\Documents\\react template\\src\\redux\\store.js",[],"C:\\Users\\furs2\\Documents\\react template\\src\\hooks\\auth.hook.js",["119","120"],"import { useCallback, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { loginUser, logoutUser } from '../redux/action/index'\r\n\r\nconst storageName = 'projectData'\r\n\r\nexport const useAuth = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const login = useCallback((accessToken, refreshToken, id, firstName, lastname) => {\r\n        dispatch(loginUser(accessToken, refreshToken, id, firstName, lastname))\r\n\r\n        localStorage.setItem(\r\n            storageName,\r\n            JSON.stringify({\r\n                userId: id,\r\n                accessToken,\r\n                refreshToken,\r\n                firstName,\r\n                lastname,\r\n            }),\r\n        )\r\n    }, [])\r\n\r\n    const logout = useCallback(() => {\r\n        dispatch(logoutUser())\r\n\r\n        localStorage.removeItem(storageName)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const data = JSON.parse(localStorage.getItem(storageName))\r\n\r\n        if (data && data.token) {\r\n            login(\r\n                data.token,\r\n                data.userId,\r\n                data.firstName,\r\n                data.lastname,\r\n                data.accessToken,\r\n                data.refreshToken,\r\n            )\r\n        }\r\n\r\n    }, [login])\r\n\r\n    return { login, logout }\r\n}\r\n","C:\\Users\\furs2\\Documents\\react template\\src\\config\\index.js",[],"C:\\Users\\furs2\\Documents\\react template\\src\\hooks\\routes.hook.jsx",[],"C:\\Users\\furs2\\Documents\\react template\\src\\redux\\action\\index.js",[],"C:\\Users\\furs2\\Documents\\react template\\src\\redux\\reducers\\index.js",[],"C:\\Users\\furs2\\Documents\\react template\\src\\pages\\Main.jsx",["121"],"import React from 'react'\r\nimport logo from '../assets/logo1.png'\r\nimport { Dashboard } from '../pages'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Main() {\r\n    return (\r\n        <>\r\n            <div className=\"container--main\">\r\n                <div className=\"wrapper\">\r\n                    <div className=\"main__content\">\r\n                        <div className=\"logo\">\r\n                            <img src={logo} alt=\"logo1\" />\r\n                        </div>\r\n                        <h1>АРТ-НАРОД</h1>\r\n                        <h2>Творчество в людях</h2>\r\n                        <button>\r\n                                Начать сейчас!\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Dashboard />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","C:\\Users\\furs2\\Documents\\react template\\src\\redux\\reducers\\main.js",[],"C:\\Users\\furs2\\Documents\\react template\\src\\pages\\index.js",[],"C:\\Users\\furs2\\Documents\\react template\\src\\pages\\Auth.jsx",["122","123"],"import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useSelector } from 'react-redux';\r\nimport { api } from '../config';\r\nimport logo4 from '../assets/logo4.png'\r\nimport { SnackCenter } from '../components'\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\n\r\nexport default function SignIn() {\r\n    const history = useHistory()\r\n    const login = useSelector(({ user }) => user.login)\r\n    const [isErr, setIsErr] = useState(false)\r\n\r\n    const [snackErrTxt, setSnackErrTxt] = useState('')\r\n\r\n    const [emailErr, setEmailErr] = useState(false)\r\n    const [passErr, setPassErr] = useState(false)\r\n\r\n    const [form, setForm] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    // конфиг апи для аксиоса\r\n    // api.interceptors.request.use(\r\n    //     config => {\r\n    //         config.headers.authorization = `Bearer 12345`\r\n    //         return config\r\n    //     },\r\n    //     error => {\r\n    //         return Promise.reject(error)\r\n    //     }\r\n    // )\r\n\r\n    const changeHandler = event => {\r\n        setForm({ ...form, [event.target.name]: event.target.value })\r\n        event.target.name === 'email' && event.target.value.length < 2 ? setEmailErr(true) : setEmailErr(false)\r\n        event.target.name === 'password' && event.target.value.length < 8 ? setPassErr(true) : setPassErr(false)\r\n    }\r\n\r\n    const authHandler = async () => {\r\n        try {\r\n            setSnackErrTxt('')\r\n            await api.post('account/login', { ...form })\r\n                .then((response) => {\r\n                    const { accessToken, refreshToken, firstName, id } = response.data\r\n                    return login(accessToken, refreshToken, firstName, id)\r\n                })\r\n            history.push('/Main')\r\n        } catch (err) {\r\n            setSnackErrTxt('проверьте правильность введённых данных')\r\n            setIsErr(true)\r\n            // setSnackErrTxt(err.response.data.message)\r\n        }\r\n\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleKeyPress = e => e.key === 'Enter' && authHandler()\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <SnackCenter\r\n                openCenterSnack={isErr}\r\n                message={snackErrTxt}\r\n                setOpenCenterSnack={setIsErr}\r\n                typeSnack={'error'}\r\n            />\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <img className=\"auth__ava\" src={logo4} alt=\"logo\" />\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Войти в аккаунт\r\n                </Typography>\r\n                {/* {snackErrTxt && <SnackBar messageErr={snackErrTxt} />} */}\r\n                <form className={classes.form} noValidate>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email адрес\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                        onChange={changeHandler}\r\n                        error={emailErr}\r\n                        helperText={emailErr && 'минимальная длнна 2 символа!'}\r\n                        onKeyPress={handleKeyPress}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        onChange={changeHandler}\r\n                        error={passErr}\r\n                        helperText={passErr && 'минимальная длнна 8 символов!'}\r\n                        onKeyPress={handleKeyPress}\r\n                    />\r\n\r\n                    <Button\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={authHandler}\r\n                    >\r\n                        Войти</Button>\r\n                    <Grid container>\r\n                        <Link className=\"linkFix\" to=\"/signup\" variant=\"body2\">\r\n                            {\"Ещё нет аккаунта? Зарегистрируйтесь\"}\r\n                        </Link>\r\n                        <Link to=\"/main\" className=\"ml\">Главная</Link>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={2}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}","C:\\Users\\furs2\\Documents\\react template\\src\\pages\\SignUp.jsx",["124","125","126","127","128","129"],"import React, { useEffect, useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { api } from '../config'\r\nimport logo4 from '../assets/logo4.png'\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { loginUser } from '../redux/action'\r\n\r\nimport { SnackCenter } from '../components'\r\n\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignUp() {\r\n    const classes = useStyles();\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const [nameErr, setNameErr] = useState(false)\r\n    const [surnameErr, setsurNameErr] = useState(false)\r\n    const [emailErr, setEmailErr] = useState(false)\r\n    const [passErr, setPassErr] = useState(false)\r\n    const [confirmPassErr, setConfirmPassErr] = useState(false)\r\n    const [isErr, setIsErr] = useState(false)\r\n\r\n    const [snackErrTxt, setSnackErrTxt] = useState('')\r\n\r\n    const [form, setForm] = useState({\r\n        email: '',\r\n        password: '',\r\n        name: '',\r\n        surname: '',\r\n        role: 'user'\r\n    })\r\n\r\n    const changeHandler = event => {\r\n        setForm({ ...form, [event.target.name]: event.target.value })\r\n        console.log(event.target.name)\r\n        event.target.name === 'name' && event.target.value.length < 2 ? setNameErr(true) : setNameErr(false)\r\n        event.target.name === 'surname' && event.target.value.length < 2 ? setsurNameErr(true) : setsurNameErr(false)\r\n        event.target.name === 'email' && event.target.value.length < 2 ? setEmailErr(true) : setEmailErr(false)\r\n        event.target.name === 'password' && event.target.value.length < 8 ? setPassErr(true) : setPassErr(false)\r\n        event.target.name === 'confirmPassword' && event.target.value.length < 8 ? setConfirmPassErr(true) : setConfirmPassErr(false)\r\n    }\r\n    console.log(form)\r\n    const registerHandler = async () => {\r\n        try {\r\n            let formToServer = {\r\n                ...form,\r\n                email: form.email.toLowerCase()\r\n            }\r\n\r\n            setSnackErrTxt('')\r\n\r\n            console.log(formToServer)\r\n\r\n            await api.post('account/registration', { ...formToServer })\r\n                .then(response => console.log(response.status))\r\n            history.push('/auth')\r\n        } catch (err) {\r\n            setSnackErrTxt('проверьте правильность введённых данных')\r\n            setIsErr(true)\r\n            console.log(err.response.data)\r\n        }\r\n    }\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === 'Enter') {\r\n            registerHandler()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            {/* {snackErrTxt && <SnackBar messageErr={snackErrTxt} />} */}\r\n            <SnackCenter \r\n                openCenterSnack={isErr}\r\n                message={snackErrTxt}\r\n                setOpenCenterSnack={setIsErr} \r\n                typeSnack={'error'}\r\n            />\r\n            <div className={classes.paper}>\r\n                <img className=\"auth__ava\" src={logo4} alt=\"logo\" />\r\n\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Зарегистрироваться\r\n                </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} >\r\n                            <TextField\r\n                                autoComplete=\"fname\"\r\n                                name=\"name\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"firstName\"\r\n                                label=\"Имя\"\r\n                                autoFocus\r\n                                onChange={changeHandler}\r\n                                error={nameErr}\r\n                                helperText={nameErr && 'минимальная длнна 2 символа!'}\r\n                                onKeyPress={handleKeyPress}\r\n                            />\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email адрес\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                                onChange={changeHandler}\r\n                                error={emailErr}\r\n                                helperText={emailErr && 'минимальная длнна 2 символа!'}\r\n                                onKeyPress={handleKeyPress}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Пароль\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"password\"\r\n                                onChange={changeHandler}\r\n                                error={passErr}\r\n                                helperText={passErr && 'минимальная длнна 8 символов!'}\r\n                                onKeyPress={handleKeyPress}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"confirmPassword\"\r\n                                label=\"повторите пароль\"\r\n                                type=\"password\"\r\n                                id=\"сonfirmPassword\"\r\n                                autoComplete=\"сonfirmPassword\"\r\n                                onChange={changeHandler}\r\n                                error={confirmPassErr}\r\n                                helperText={confirmPassErr && 'минимальная длнна 8 символов!'}\r\n                                onKeyPress={handleKeyPress}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={registerHandler}\r\n                    >\r\n                        Зарегистрироваться\r\n                    </Button>\r\n                    <Grid container justify=\"center\">\r\n                        <Grid item>\r\n                            <Link to=\"/auth\" variant=\"body2\">Уже есть аккаунт? Войти</Link>\r\n                            <Link to=\"/main\" className=\"ml\" variant=\"body2\">Главная</Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={2}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}","C:\\Users\\furs2\\Documents\\react template\\src\\components\\index.js",[],"C:\\Users\\furs2\\Documents\\react template\\src\\components\\CircLoader.jsx",[],"C:\\Users\\furs2\\Documents\\react template\\src\\components\\SnackCenter.jsx",["130"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function CustomizedSnackbars({ openCenterSnack, message, setOpenCenterSnack, typeSnack }) {\r\n    const classes = useStyles();\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n    \r\n        setOpenCenterSnack(false)\r\n      };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Snackbar open={openCenterSnack} autoHideDuration={3000} onClose={handleClose}>\r\n                <Alert severity={typeSnack}>{message}</Alert>\r\n            </Snackbar>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\furs2\\Documents\\react template\\src\\pages\\Dashboard.jsx",["131","132","133","134","135","136","137","138","139"],"import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setCategories, setCurrCategorys } from '../redux/action'\r\n\r\nimport Header from './Header'\r\n\r\n// photo\r\nimport cinema from '../assets/icons/1.png'\r\nimport guitar from '../assets/icons/2.png'\r\nimport voice from '../assets/icons/3.png'\r\nimport write from '../assets/icons/4.png'\r\nimport dance from '../assets/icons/5.png'\r\nimport mask from '../assets/icons/6.png'\r\nimport photo from '../assets/icons/7.png'\r\nimport paint from '../assets/icons/8.png'\r\n\r\nimport social from '../assets/icons/сообщ.png'\r\nimport events from '../assets/icons/меропр.png'\r\nimport atlas from '../assets/icons/атлас.png'\r\n\r\nimport { api } from '../config'\r\n\r\nimport Footer from './Footer'\r\n\r\nconst Dashboard = React.memo(function Dashboard() {\r\n    const dispatch = useDispatch()\r\n    const allCategories = useSelector(({ categories }) => categories.allCategoreis)\r\n\r\n    const getCategories = async () => {\r\n        await api.get('/categories')\r\n            .then(response => dispatch(setCategories(response.data)))\r\n    }\r\n\r\n    const setCurrCategory = async (category) => {\r\n        await api.get(`/categories/${category.id}/posts`)\r\n            .then(response => dispatch(setCurrCategorys(response.data)))\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCategories()\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"container dash\">\r\n            <Header />\r\n            <div className=\"wrapper wrapper__column\">\r\n                <div className=\"wrapper__top\">\r\n                    <h2>Категории<span> - выберите интересующую вас группу</span></h2>\r\n                </div>\r\n\r\n                <div className=\"categories\">\r\n                    <div className=\"categories__block\">\r\n                        {\r\n                            allCategories.map((category, index) => {\r\n                                return (\r\n                                    <Link to=\"/Category\" className=\"noneBorder\" key={`${category.name}__${index}`}>\r\n                                        <div className=\"categories__block--item\" onClick={() => setCurrCategory(category)} >\r\n                                            <div className=\"categories__block--item--picture\">\r\n                                                <img src={category.url} alt=\"pictures\" />\r\n                                            </div>\r\n                                            <p>{category.name}</p>\r\n                                        </div>\r\n                                    </Link>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                    {/* right */}\r\n                    <div className=\"categories__art\">\r\n                        <div className=\"categories__block--item categories__block--right\">\r\n                            <div className=\"categories__block--item--picture\">\r\n                                <img src={social} alt=\"pictures\" />\r\n                            </div>\r\n                            <p>Сообщества</p>\r\n                        </div>\r\n                        <div className=\"categories__block--item categories__block--right\">\r\n                            <div className=\"categories__block--item--picture\">\r\n                                <img src={events} alt=\"pictures\" />\r\n                            </div>\r\n                            <p>Мероприятия</p>\r\n                        </div>\r\n                        <div className=\"categories__block--item categories__block--right\">\r\n                            <div className=\"categories__block--item--picture\">\r\n                                <img src={atlas} alt=\"pictures\" />\r\n                            </div>\r\n                            <p>Арт-Атлас</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Dashboard\r\n","C:\\Users\\furs2\\Documents\\react template\\src\\redux\\reducers\\categories.js",[],"C:\\Users\\furs2\\Documents\\react template\\src\\pages\\Footer.jsx",[],"C:\\Users\\furs2\\Documents\\react template\\src\\pages\\Category.jsx",["140","141"],"C:\\Users\\furs2\\Documents\\react template\\src\\pages\\Header.jsx",[],"C:\\Users\\furs2\\Documents\\react template\\src\\components\\Find.jsx",["142","143","144","145","146","147","148"],"import React from 'react';\r\nimport {\r\n    fade,\r\n    ThemeProvider,\r\n    withStyles,\r\n    makeStyles,\r\n    createMuiTheme,\r\n} from '@material-ui/core/styles';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { green } from '@material-ui/core/colors';\r\n\r\nconst CssTextField = withStyles({\r\n    root: {\r\n        '& label.Mui-focused': {\r\n            color: 'green',\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'green',\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            '& fieldset': {\r\n                borderColor: 'red',\r\n            },\r\n            '&:hover fieldset': {\r\n                borderColor: 'yellow',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: 'green',\r\n            },\r\n        },\r\n    },\r\n})(TextField);\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n    root: {\r\n        'label + &': {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n    input: {\r\n        borderRadius: 4,    \r\n        position: 'relative',\r\n        backgroundColor: theme.palette.common.white,\r\n        border: '1px solid #ced4da',\r\n        fontSize: 16,\r\n        width: '600px',\r\n        padding: '10px 12px',\r\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n        // Use the system font instead of the default Roboto font.\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(','),\r\n        '&:focus': {\r\n            boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\r\n            borderColor: theme.palette.primary.main,\r\n        },\r\n    },\r\n}))(InputBase);\r\n\r\nconst useStylesReddit = makeStyles((theme) => ({\r\n    root: {\r\n        border: '1px solid #e2e2e1',\r\n        overflow: 'hidden',\r\n        borderRadius: 4,\r\n        width: '500px',\r\n        backgroundColor: '#fcfcfb',\r\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n        },\r\n        '&$focused': {\r\n            backgroundColor: '#fff',\r\n            boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\r\n            borderColor: theme.palette.primary.main,\r\n        },\r\n    },\r\n    focused: {},\r\n}));\r\n\r\nfunction RedditTextField(props) {\r\n    const classes = useStylesReddit();\r\n\r\n    return <TextField InputProps={{ classes, disableUnderline: true }} {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        width: '500px'\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst ValidationTextField = withStyles({\r\n    root: {\r\n        width: '400px',\r\n        '& input:valid + fieldset': {\r\n            borderColor: 'green',\r\n            borderWidth: 2,\r\n        },\r\n        '& input:invalid + fieldset': {\r\n            borderColor: 'red',\r\n            borderWidth: 2,\r\n        },\r\n        '& input:valid:focus + fieldset': {\r\n            borderLeftWidth: 6,\r\n            padding: '4px !important', // override inline-style\r\n        },\r\n    },\r\n})(TextField);\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: green,\r\n    },\r\n});\r\n\r\nexport default function CustomizedInputs() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <form className={classes.root} noValidate>\r\n            <RedditTextField\r\n                label=\"Поиск\"\r\n                className={classes.margin}\r\n                defaultValue=\"Алексей...\"\r\n                variant=\"filled\"\r\n                id=\"reddit-input\"\r\n            />\r\n        </form>\r\n    );\r\n}\r\n","C:\\Users\\furs2\\Documents\\react template\\src\\components\\Button.jsx",[],"C:\\Users\\furs2\\Documents\\react template\\src\\components\\ButtonReg.jsx",[],"C:\\Users\\furs2\\Documents\\react template\\src\\redux\\reducers\\userClick.js",[],"C:\\Users\\furs2\\Documents\\react template\\src\\pages\\UserPage.jsx",["149"],{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":1,"column":17,"nodeType":"156","messageId":"157","endLine":1,"endColumn":26},{"ruleId":"154","severity":1,"message":"158","line":1,"column":28,"nodeType":"156","messageId":"157","endLine":1,"endColumn":36},{"ruleId":"154","severity":1,"message":"159","line":6,"column":10,"nodeType":"156","messageId":"157","endLine":6,"endColumn":13},{"ruleId":"160","severity":1,"message":"161","line":23,"column":8,"nodeType":"162","endLine":23,"endColumn":10,"suggestions":"163"},{"ruleId":"160","severity":1,"message":"161","line":29,"column":8,"nodeType":"162","endLine":29,"endColumn":10,"suggestions":"164"},{"ruleId":"154","severity":1,"message":"165","line":4,"column":10,"nodeType":"156","messageId":"157","endLine":4,"endColumn":14},{"ruleId":"154","severity":1,"message":"166","line":2,"column":8,"nodeType":"156","messageId":"157","endLine":2,"endColumn":14},{"ruleId":"154","severity":1,"message":"167","line":9,"column":8,"nodeType":"156","messageId":"157","endLine":9,"endColumn":24},{"ruleId":"154","severity":1,"message":"155","line":1,"column":17,"nodeType":"156","messageId":"157","endLine":1,"endColumn":26},{"ruleId":"154","severity":1,"message":"166","line":2,"column":8,"nodeType":"156","messageId":"157","endLine":2,"endColumn":14},{"ruleId":"154","severity":1,"message":"167","line":9,"column":8,"nodeType":"156","messageId":"157","endLine":9,"endColumn":24},{"ruleId":"154","severity":1,"message":"168","line":17,"column":10,"nodeType":"156","messageId":"157","endLine":17,"endColumn":19},{"ruleId":"154","severity":1,"message":"169","line":54,"column":11,"nodeType":"156","messageId":"157","endLine":54,"endColumn":19},{"ruleId":"154","severity":1,"message":"170","line":57,"column":12,"nodeType":"156","messageId":"157","endLine":57,"endColumn":22},{"ruleId":"154","severity":1,"message":"171","line":2,"column":8,"nodeType":"156","messageId":"157","endLine":2,"endColumn":14},{"ruleId":"154","severity":1,"message":"172","line":10,"column":8,"nodeType":"156","messageId":"157","endLine":10,"endColumn":14},{"ruleId":"154","severity":1,"message":"173","line":11,"column":8,"nodeType":"156","messageId":"157","endLine":11,"endColumn":14},{"ruleId":"154","severity":1,"message":"174","line":12,"column":8,"nodeType":"156","messageId":"157","endLine":12,"endColumn":13},{"ruleId":"154","severity":1,"message":"175","line":13,"column":8,"nodeType":"156","messageId":"157","endLine":13,"endColumn":13},{"ruleId":"154","severity":1,"message":"176","line":14,"column":8,"nodeType":"156","messageId":"157","endLine":14,"endColumn":13},{"ruleId":"154","severity":1,"message":"177","line":15,"column":8,"nodeType":"156","messageId":"157","endLine":15,"endColumn":12},{"ruleId":"154","severity":1,"message":"178","line":16,"column":8,"nodeType":"156","messageId":"157","endLine":16,"endColumn":13},{"ruleId":"154","severity":1,"message":"179","line":17,"column":8,"nodeType":"156","messageId":"157","endLine":17,"endColumn":13},{"ruleId":"160","severity":1,"message":"180","line":43,"column":8,"nodeType":"162","endLine":43,"endColumn":10,"suggestions":"181"},{"ruleId":"154","severity":1,"message":"182","line":2,"column":8,"nodeType":"156","messageId":"157","endLine":2,"endColumn":14},{"ruleId":"154","severity":1,"message":"165","line":9,"column":10,"nodeType":"156","messageId":"157","endLine":9,"endColumn":14},{"ruleId":"154","severity":1,"message":"183","line":4,"column":5,"nodeType":"156","messageId":"157","endLine":4,"endColumn":18},{"ruleId":"154","severity":1,"message":"184","line":10,"column":8,"nodeType":"156","messageId":"157","endLine":10,"endColumn":18},{"ruleId":"154","severity":1,"message":"185","line":12,"column":8,"nodeType":"156","messageId":"157","endLine":12,"endColumn":19},{"ruleId":"154","severity":1,"message":"186","line":15,"column":7,"nodeType":"156","messageId":"157","endLine":15,"endColumn":19},{"ruleId":"154","severity":1,"message":"187","line":37,"column":7,"nodeType":"156","messageId":"157","endLine":37,"endColumn":21},{"ruleId":"154","severity":1,"message":"188","line":109,"column":7,"nodeType":"156","messageId":"157","endLine":109,"endColumn":26},{"ruleId":"154","severity":1,"message":"189","line":127,"column":7,"nodeType":"156","messageId":"157","endLine":127,"endColumn":12},{"ruleId":"154","severity":1,"message":"190","line":3,"column":10,"nodeType":"156","messageId":"157","endLine":3,"endColumn":21},"no-native-reassign",["191"],"no-negated-in-lhs",["192"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'api' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["193"],["194"],"'Link' is defined but never used.","'Avatar' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'loginUser' is defined but never used.","'dispatch' is assigned a value but never used.","'surnameErr' is assigned a value but never used.","'Button' is defined but never used.","'cinema' is defined but never used.","'guitar' is defined but never used.","'voice' is defined but never used.","'write' is defined but never used.","'dance' is defined but never used.","'mask' is defined but never used.","'photo' is defined but never used.","'paint' is defined but never used.","React Hook useEffect has a missing dependency: 'getCategories'. Either include it or remove the dependency array.",["195"],"'Header' is defined but never used.","'ThemeProvider' is defined but never used.","'InputLabel' is defined but never used.","'FormControl' is defined but never used.","'CssTextField' is assigned a value but never used.","'BootstrapInput' is assigned a value but never used.","'ValidationTextField' is assigned a value but never used.","'theme' is assigned a value but never used.","'useDispatch' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"196","fix":"197"},{"desc":"196","fix":"198"},{"desc":"199","fix":"200"},"Update the dependencies array to be: [dispatch]",{"range":"201","text":"202"},{"range":"203","text":"202"},"Update the dependencies array to be: [getCategories]",{"range":"204","text":"205"},[702,704],"[dispatch]",[836,838],[1398,1400],"[getCategories]"]